name: Build

on:
  pull_request: {}
  push:
    branches:
    - main
    tags:
    - v*

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Valkyrie production
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Read .nvmrc
      run: echo "::set-output name=NVMRC::$(cat ./.nvmrc)"
      id: nvm
    - name: Use Node + Yarn
      uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
        cache: "yarn"
    - run: yarn install --frozen-lockfile
    - name: Dev build
      #if: github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
      run: |
        echo $GITHUB_SHA > BUILD
        docker build . -f infrastructure/docker/Dockerfile -t gcr.io/thesis-ops-2748/valkyrie:$GITHUB_SHA
    - name: Production build
      if: false #github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      run: yarn build
      env:
        ALCHEMY_KEY: ${{ secrets.ALCHEMY_API_KEY }}
        BLOCKNATIVE_API_KEY: ${{ secrets.BLOCKNATIVE_API_KEY }}
        SIMPLE_HASH_API_KEY: ${{ secrets.SIMPLE_HASH_API_KEY }}
        ZEROX_API_KEY: ${{ secrets.ZEROX_API_KEY }}
        COMMIT_SHA: ${{ github.sha }}

    - name: Authenticate with GCP
      if: true #github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
    - name: Set up GCP tools
      if: true #github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      uses: google-github-actions/setup-gcloud@v0
    - name: Push docker image to GCP
      if: true #github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker
        docker push gcr.io/thesis-ops-2748/valkyrie:$GITHUB_SHA
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Read .nvmrc
      run: echo "::set-output name=NVMRC::$(cat ./.nvmrc)"
      id: nvm
    - name: Use Node + Yarn
      uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
        cache: "yarn"
    - run: yarn install --frozen-lockfile
    - run: yarn test
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Read .nvmrc
      run: echo "::set-output name=NVMRC::$(cat ./.nvmrc)"
      id: nvm
    - name: Use Node + Yarn
      uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"
        cache: "yarn"
    - run: yarn install --frozen-lockfile
    - run: yarn lint
